package fram;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.awt.Point;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;

import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JInternalFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableModel;

import sql.sqlOperate;

public class GetRoomListener implements ActionListener
{
	JPanel jplDisplay,displayUp;
	JInternalFrame jifShow;
	private JPanel panel_1;
	private JLabel lblNewLabel;
	private JLabel lblNewLabel_1,lblNewLabel_2;
	private JTextField tend,treason;
	private JLabel lblNewLabel_3,lblNewLabel_4;
	private JTextField tbegain;
	private JComboBox InsBox1;
	int num,memRow=0;
	String number=null;
	public GetRoomListener(JPanel jpl,String numb)
	{
		number=numb;
		this.jplDisplay=jpl;
	}
	public void actionPerformed(ActionEvent e)
	{
		
		jplDisplay.removeAll();
		jifShow = new JInternalFrame("查询/申请",true,true,true);
		jifShow.getContentPane().setLayout(new BorderLayout(0, 0));
		
		JPanel panel = new JPanel();
		displayUp = new JPanel(new GridBagLayout());
		displayUp.setBackground(Color.LIGHT_GRAY);
		jifShow.getContentPane().add(panel, BorderLayout.SOUTH);
		jifShow.getContentPane().add(displayUp, BorderLayout.NORTH);
		panel.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));

		String[] cate={"","教室号","教学楼","教室类型"};
		InsBox1 = new JComboBox(cate);
		InsBox1.setFont(new Font("宋体", Font.PLAIN, 13));
		
		
		JLabel jName=new JLabel("name");
		final JTextField pName=new JTextField(12);
		JButton jget=new JButton("查询");
		JLabel jCate=new JLabel("类别");
				
		GridBagConstraints gridBagCon01 = new GridBagConstraints();
		gridBagCon01.insets = new Insets(30, 5, 5, 5); 
		gridBagCon01.gridx = 3;
		gridBagCon01.gridy = 2;
		displayUp.add(InsBox1, gridBagCon01);
		
	/*	gridBagCon01.gridx = 3;
		gridBagCon01.gridy = 2;
		displayUp.add(jName, gridBagCon01);*/
		gridBagCon01.insets = new Insets(30, 5, 5, 5); 
		gridBagCon01.gridx = 4;
		displayUp.add(pName, gridBagCon01);
		
		gridBagCon01.insets = new Insets(30, 5, 5, 5); 
		gridBagCon01.gridx = 5;
		gridBagCon01.gridy = 2;
		displayUp.add(jget, gridBagCon01);
		jifShow.add(displayUp,BorderLayout.NORTH);
		
		panel_1 = new JPanel();
		jifShow.getContentPane().add(panel_1, BorderLayout.EAST);
		GridBagLayout gbl_panel_1 = new GridBagLayout();
		gbl_panel_1.columnWidths = new int[]{54, 66, 0};
		gbl_panel_1.rowHeights = new int[]{21, 0, 0, 0, 0, 0, 0, 0};
		gbl_panel_1.columnWeights = new double[]{0.0, 1.0, Double.MIN_VALUE};
		gbl_panel_1.rowWeights = new double[]{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, Double.MIN_VALUE};
		panel_1.setLayout(gbl_panel_1);

		lblNewLabel = new JLabel("使用时间段");
		lblNewLabel.setFont(new Font("幼圆", Font.PLAIN, 15));
		GridBagConstraints gbc_lblNewLabel = new GridBagConstraints();
		gbc_lblNewLabel.insets = new Insets(15, 0, 5, 5);
		gbc_lblNewLabel.gridx = 0;
		gbc_lblNewLabel.gridy = 0;
		panel_1.add(lblNewLabel, gbc_lblNewLabel);
		
		lblNewLabel_2 = new JLabel("格式:2017-06-03 14:00");
		lblNewLabel_2.setFont(new Font("宋体", Font.PLAIN, 10));
		GridBagConstraints gbc_lblNewLabel_2 = new GridBagConstraints();
		gbc_lblNewLabel_2.insets = new Insets(0, 0, 5, 5);
		gbc_lblNewLabel_2.gridx = 1;
		gbc_lblNewLabel_2.gridy = 1;
		panel_1.add(lblNewLabel_2, gbc_lblNewLabel_2);
		
		lblNewLabel = new JLabel("使用开始时间");
		lblNewLabel.setFont(new Font("宋体", Font.PLAIN, 13));
		gbc_lblNewLabel.insets = new Insets(0, 0, 5, 5);
		gbc_lblNewLabel.gridx = 0;
		gbc_lblNewLabel.gridy = 2;
		panel_1.add(lblNewLabel, gbc_lblNewLabel);
		
		tbegain = new JTextField();
		GridBagConstraints gbc_tbegain = new GridBagConstraints();
		gbc_tbegain.insets = new Insets(0, 0, 5, 20);
		gbc_tbegain.fill = GridBagConstraints.HORIZONTAL;
		gbc_tbegain.gridx = 1;
		gbc_tbegain.gridy = 2;
		panel_1.add(tbegain, gbc_tbegain);
		tbegain.setColumns(8);
		
		lblNewLabel_1 = new JLabel("使用结束时间");
		lblNewLabel_1.setFont(new Font("宋体", Font.PLAIN, 13));
		GridBagConstraints gbc_lblNewLabel_1 = new GridBagConstraints();
		gbc_lblNewLabel_1.insets = new Insets(0, 0, 5, 5);
		gbc_lblNewLabel_1.gridx = 0;
		gbc_lblNewLabel_1.gridy = 3;
		panel_1.add(lblNewLabel_1, gbc_lblNewLabel_1);
		
		tend = new JTextField();
		GridBagConstraints gbc_tend = new GridBagConstraints();
		gbc_tend.insets = new Insets(0, 0, 5, 20);
		gbc_tend.fill = GridBagConstraints.HORIZONTAL;
		gbc_tend.gridx = 1;
		gbc_tend.gridy = 3;
		panel_1.add(tend, gbc_tend);
		tend.setColumns(10);
		
		lblNewLabel_4 = new JLabel("申请用途");
		lblNewLabel_4.setFont(new Font("宋体", Font.PLAIN, 13));
		GridBagConstraints gbc_lblNewLabel_4 = new GridBagConstraints();
		gbc_lblNewLabel_4.insets = new Insets(0, 0, 5, 5);
		gbc_lblNewLabel_4.gridx = 0;
		gbc_lblNewLabel_4.gridy = 4;
		panel_1.add(lblNewLabel_4, gbc_lblNewLabel_4);
		
		treason = new JTextField();
		GridBagConstraints gbc_treason= new GridBagConstraints();
		gbc_treason.insets = new Insets(0, 0, 5, 20);
		gbc_treason.fill = GridBagConstraints.HORIZONTAL;
		gbc_treason.gridx = 1;
		gbc_treason.gridy = 4;
		panel_1.add(treason, gbc_treason);
		treason.setColumns(10);
		
		JButton btn_apply = new JButton("申请");
		GridBagConstraints gbc_apply = new GridBagConstraints();
		gbc_apply.insets = new Insets(20, 0, 0, 20);
		gbc_apply.anchor = GridBagConstraints.EAST;
		gbc_apply.weighty = 50.0;
		gbc_apply.gridx = 1;
		gbc_apply.gridy = 6;
		panel_1.add(btn_apply, gbc_apply);
		btn_apply.setFont(new Font("幼圆", Font.PLAIN, 15));
		btn_apply.setHorizontalAlignment(SwingConstants.RIGHT);
		
		
		final JScrollPane jspDisplay=new JScrollPane();	
		jspDisplay.setBackground(Color.WHITE);
		final DefaultTableModel model = new DefaultTableModel();	
		model.setColumnIdentifiers(new Object[]{"编号","教室号","教学楼","座位数","教室类型"});
		JTable rmTable=new JTable(model);	
		rmTable.setPreferredScrollableViewportSize(new Dimension(300,200));
		rmTable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
		rmTable.setFillsViewportHeight(true);
		rmTable.setRowHeight(25);
		jspDisplay.add(rmTable);	
		jspDisplay.setViewportView(rmTable);
		jifShow.getContentPane().add(jspDisplay,BorderLayout.CENTER);
		
		try {
			sqlOperate operate=new sqlOperate();
			operate.searchRoom(number);
			while(operate.rs.next()){
				int id=operate.rs.getInt("Id");
				String cmo=operate.rs.getString("Cmo");
				String jxlou=operate.rs.getString("Jxlou");
				String zwshu=operate.rs.getString("Zwshu");
				String type=operate.rs.getString("Type");
				model.addRow(new Object[]{id,cmo,jxlou,zwshu,type});
			}
		} catch (ClassNotFoundException e2) {
			JOptionPane.showMessageDialog(jifShow, "数据库连接异常","警告", 2);
			e2.printStackTrace();
		} catch (SQLException e1) {
			JOptionPane.showMessageDialog(jifShow, "数据库连接异常","警告", 2);
			e1.printStackTrace();
		}

		jplDisplay.add(jifShow);
		jifShow.setVisible(true);
		
		//鼠标点击表格获取行标号
		rmTable.addMouseListener(new java.awt.event.MouseAdapter(){
			public void mouseClicked(java.awt.event.MouseEvent e){
				Point mousepoint;
				mousepoint =e.getPoint();
				memRow=rmTable.rowAtPoint(mousepoint);
			}
		});
		
		
		jget.addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				String tableName=InsBox1.getSelectedItem().toString();
				String name=pName.getText();
				String cloName=null;
				String cate=null;
				//设置查询列名
				if(tableName.equals("教室号")){
					cloName="Cmo";
				}
				if(tableName.equals("教学楼")){
					cloName="Jxlou";
				}
				if(tableName.equals("教室类型")){
					cloName="Type";
				}
				
				if(tableName!=null&&name!=null){
					try {
						sqlOperate operate=new sqlOperate();
						operate.search_user_type(number);
						while(operate.rs.next()){
							cate=operate.rs.getString("Type");
						}
						if(tableName.equals("教室类型")&&(name.equals("多媒体教室")||name.equals("会议室"))&&cate.equals("学生")){
							JOptionPane.showMessageDialog(jifShow, "权限不允许,学生只可查看普通教室","警告", 2);
						}
						else{
							model.setRowCount(0);
							operate.search_room(cloName,name);
							while(operate.rs.next()){
								int id=operate.rs.getInt("Id");
								String cmo=operate.rs.getString("Cmo");
								String jxlou=operate.rs.getString("Jxlou");
								String zwshu=operate.rs.getString("Zwshu");
								String type=operate.rs.getString("Type");
								model.addRow(new Object[]{id,cmo,jxlou,zwshu,type});
							}
						}						
					} catch (ClassNotFoundException e2) {
						JOptionPane.showMessageDialog(jifShow, "数据库连接异常","警告", 2);
						e2.printStackTrace();
					} catch (SQLException e1) {
						JOptionPane.showMessageDialog(jifShow, "数据库连接异常","警告", 2);
						e1.printStackTrace();
					}
				}
				else
					JOptionPane.showMessageDialog(jifShow, "请输入查询数据","警告", 2);
			}
		});
		
		btn_apply.addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				int i=0;
				String end=tend.getText();
				String begain=tbegain.getText();
				String reason=treason.getText();
				String Cmo = (String) rmTable.getValueAt(memRow, 1);
				
				Date date = new Date();
				DateFormat format = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
				String time = format.format(date);
				
				if(end!=null&&begain!=null&&reason!=null&&Cmo!=null){
				try {
					sqlOperate operate=new sqlOperate();
					operate.add_apply(number,Cmo,begain,end,reason,time);
					JOptionPane.showMessageDialog(jifShow, "申请已提交，可在我的申请中查看","警告", 2);
				} catch (ClassNotFoundException e1) {
					JOptionPane.showMessageDialog(jifShow, "数据库连接异常","警告", 2);
					e1.printStackTrace();
				} catch (SQLException e1) {
					JOptionPane.showMessageDialog(jifShow, "数据库连接异常","警告", 2);
					e1.printStackTrace();
				}
			}else
				JOptionPane.showMessageDialog(jifShow, "数据不全","警告", 2);}

		});
				
	}
}
